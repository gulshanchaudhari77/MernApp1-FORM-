{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulsh\\\\OneDrive\\\\Desktop\\\\FORM fron-back\\\\frontend\\\\my-app\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from \"react-toastify\";\nimport { handleError, handleSuccess } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \" \",\n    password: \"\",\n    email: \"\"\n  });\n  console.log(formData);\n  const navigate = useNavigate();\n  function changehandler(event) {\n    setFormData(prevFormData => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n  const submitHandler = async event => {\n    event.preventDefault();\n    console.log(\"finally prinitting the data\");\n    console.log(formData);\n\n    //server side validTION KR LIYE BHAI\n\n    const {\n      name,\n      email,\n      password\n    } = formData;\n    if (!name || !email || !password) {\n      return handleError('name, email and password are required');\n    }\n    try {\n      const url = 'http://localhost:3000/api/v1/signup';\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        error\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        setTimeout(() => {\n          navigate('/login');\n        }, 1000);\n      } else if (error) {\n        const details = error === null || error === void 0 ? void 0 : error.details[0].message;\n        handleError(details);\n      } else if (!success) {\n        handleError(message);\n      }\n      console.log(result);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"3ehNHIwD8nMD0LXx60KFxZ4FZFA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","handleError","handleSuccess","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","name","password","email","console","log","navigate","changehandler","event","prevFormData","target","value","submitHandler","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","error","setTimeout","details","err","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gulsh/OneDrive/Desktop/FORM fron-back/frontend/my-app/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport {ToastContainer} from \"react-toastify\"\r\nimport { handleError, handleSuccess } from '../utils';\r\n\r\nconst SignUp = () => {\r\n\r\n\r\n    const[formData,setFormData]=useState(\r\n        {name:\" \",\r\n          password:\"\",\r\n        email:\"\",\r\n        \r\n      });\r\n      console.log(formData)\r\n\r\n      const navigate=useNavigate();\r\n    \r\n      function changehandler(event){\r\n        setFormData(prevFormData=>{\r\n          return{\r\n            ...prevFormData,\r\n            [event.target.name]:event.target.value\r\n          }\r\n        });\r\n        \r\n      }\r\n\r\n      const submitHandler = async(event)=>{\r\n        event.preventDefault();\r\n        console.log(\"finally prinitting the data\");\r\n        console.log(formData)\r\n\r\n        //server side validTION KR LIYE BHAI\r\n\r\n        const { name, email, password } = formData;\r\n        if (!name || !email || !password) {\r\n            return handleError('name, email and password are required')\r\n        }\r\n        try {\r\n          const url = 'http://localhost:3000/api/v1/signup'\r\n                 const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            const result = await response.json();\r\n            const { success, message, error } = result;\r\n            if (success) {\r\n                handleSuccess(message);\r\n                setTimeout(() => {\r\n                    navigate('/login')\r\n                }, 1000)\r\n            } else if (error) {\r\n                const details = error?.details[0].message;\r\n                handleError(details);\r\n            } else if (!success) {\r\n                handleError(message);\r\n            }\r\n            console.log(result);\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    \r\n      }\r\n    \r\n      \r\n\r\n\r\n    \r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAAQC,cAAc,QAAO,gBAAgB;AAC7C,SAASC,WAAW,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGjB,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACX,QAAQ,CAChC;IAACY,IAAI,EAAC,GAAG;IACPC,QAAQ,EAAC,EAAE;IACbC,KAAK,EAAC;EAER,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EAErB,MAAMO,QAAQ,GAACf,WAAW,CAAC,CAAC;EAE5B,SAASgB,aAAaA,CAACC,KAAK,EAAC;IAC3BR,WAAW,CAACS,YAAY,IAAE;MACxB,OAAM;QACJ,GAAGA,YAAY;QACf,CAACD,KAAK,CAACE,MAAM,CAACT,IAAI,GAAEO,KAAK,CAACE,MAAM,CAACC;MACnC,CAAC;IACH,CAAC,CAAC;EAEJ;EAEA,MAAMC,aAAa,GAAG,MAAMJ,KAAK,IAAG;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtBT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;;IAErB;;IAEA,MAAM;MAAEE,IAAI;MAAEE,KAAK;MAAED;IAAS,CAAC,GAAGH,QAAQ;IAC1C,IAAI,CAACE,IAAI,IAAI,CAACE,KAAK,IAAI,CAACD,QAAQ,EAAE;MAC9B,OAAOT,WAAW,CAAC,uCAAuC,CAAC;IAC/D;IACA,IAAI;MACF,MAAMqB,GAAG,GAAG,qCAAqC;MAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QACnCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,QAAQ;MACjC,CAAC,CAAC;MACF,MAAMuB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpC,MAAM;QAAEC,OAAO;QAAEC,OAAO;QAAEC;MAAM,CAAC,GAAGJ,MAAM;MAC1C,IAAIE,OAAO,EAAE;QACT9B,aAAa,CAAC+B,OAAO,CAAC;QACtBE,UAAU,CAAC,MAAM;UACbrB,QAAQ,CAAC,QAAQ,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM,IAAIoB,KAAK,EAAE;QACd,MAAME,OAAO,GAAGF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO;QACzChC,WAAW,CAACmC,OAAO,CAAC;MACxB,CAAC,MAAM,IAAI,CAACJ,OAAO,EAAE;QACjB/B,WAAW,CAACgC,OAAO,CAAC;MACxB;MACArB,OAAO,CAACC,GAAG,CAACiB,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVpC,WAAW,CAACoC,GAAG,CAAC;IACpB;EAEF,CAAC;EAML,oBACEjC,OAAA;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAAnC,EAAA,CAxEKD,MAAM;EAAA,QAWSN,WAAW;AAAA;AAAA2C,EAAA,GAX1BrC,MAAM;AA0EZ,eAAeA,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}